// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RebelTask.DataAccess.Models;

namespace RebelTask.DataAccess.Migrations
{
    [DbContext(typeof(RebelTasksContext))]
    [Migration("20220317080715_DepartmenData")]
    partial class DepartmenData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RebelTask.DataAccess.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Yazılım kod geliştirme departmanı",
                            Name = "Yazılım"
                        },
                        new
                        {
                            Id = 2,
                            Description = "iş analiz ve genel tasarım",
                            Name = "Proje Analiz"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Arayüz ve görsel tasarım departmanı",
                            Name = "Grafik ve Arayüz"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Yöneticiler Departmanı",
                            Name = "Yönetim"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
